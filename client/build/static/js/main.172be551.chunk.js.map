{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/calculReducers.js","reducers/confirmReducers.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","actions/confirmActions.js","components/auth/Confirmation.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","actions/calculActions.js","components/logiciel/Calculatrice.js","components/logiciel/Resultat.js","components/auth/Resend.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","verification","ClearData","logoutUser","history","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","message","user","loading","resultat","fait","isVerified","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","profile","calc","conf","errors","composeSetup","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","Navbar","react_default","a","createElement","className","Link","to","style","fontFamily","Component","Landing","this","props","push","height","width","borderRadius","letterSpacing","marginLeft","connect","Register","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","registerUser","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","userData","post","then","res","data","catch","err","response","withRouter","Login","loginUser","emailnotfound","passwordincorrect","notVerified","setItem","jwt_decode","verificationEnCours","Confirmation","confirmUser","match","params","nonValide","nonTrouve","alreadyVerified","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","Dashboard","onLogoutClick","onCalculClick","split","onClick","CalculEnCours","Calculatrice","pchiffre","dchiffre","opr","Calcul","react_spinners_kit_lib","size","color","Resultat","stdout","Resend","resendUser","jwtToken","currentTime","Date","now","exp","location","href","App","es","BrowserRouter","layout_Navbar","exact","path","Switch","private_route_PrivateRoute","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.172be551.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport {\n  GET_ERRORS,\n  ENREGISTREMENT,\n  GET_CURRENT_USER,\n  SET_CURRENT_USER,\n  USER_LOADING,\n  VERIFICATION,\n  CLEAR_DATA\n} from \"./types\";\n// Register User\nexport const registerUser = (userData) => dispatch => {\n  dispatch(ClearData());\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res =>\n    dispatch({\n      type: ENREGISTREMENT,\n      payload: res.data\n    }))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Login - get user token\nexport const loginUser = (userData, history) => dispatch => {\n  dispatch(ClearData());\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n// Set token to localStorage\n      dispatch(verification());\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .then(() => history.push(\"/dashboard\")) // re-direct to dashboard on successful login\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n// Get current user\nexport const getCurrentUser = () => dispatch => {\n  dispatch(setUserLoading());\n  axios\n    .get(\"/api/user/currentuser\")\n    .then(res =>\n      dispatch({\n        type: GET_CURRENT_USER,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\nexport const verification = () => {\n  return{\n    type: VERIFICATION\n  }\n}\nexport const ClearData = () => {\n  return {\n    type : CLEAR_DATA\n  }\n}\n// Log user out\nexport const logoutUser = (history) => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n  dispatch(ClearData());\n};","export const GET_ERRORS = \"GET_ERRORS\";\nexport const ENREGISTREMENT =\"ENREGISTREMENT\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\nexport const GET_CURRENT_USER = \"GET_CURRENT_USER\";\nexport const CALCUL = \"CALCUL\";\nexport const CALULC_EN_COURS = \"CALULC_EN_COURS\";\nexport const CLEAR_DATA = \"CLEAR_DATA\";\nexport const VERIF_EN_COURS = \"VERIF_EN_COURS\";\nexport const VERIFICATION = \"VERIFICATION\";\nexport const RENVOI = \"RENVOI\";\n\n","import {\n    ENREGISTREMENT,\n    SET_CURRENT_USER,\n    USER_LOADING,\n    GET_CURRENT_USER\n  } from \"../actions/types\";\n  const isEmpty = require(\"is-empty\");\n  const initialState = {\n    isAuthenticated: false,\n    message:\"\",\n    user: {},\n    loading: false\n  };\n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case ENREGISTREMENT:\n        return {\n          ...state,\n          message: action.payload,\n        };\n      case SET_CURRENT_USER:\n        return {\n          ...state,\n          isAuthenticated: !isEmpty(action.payload),\n          user: action.payload\n        };\n      case USER_LOADING:\n        return {\n          ...state,\n          loading: true\n        };\n      case GET_CURRENT_USER:\n        return {\n          ...state,\n          profile: action.payload,\n          loading: false\n        };\n      default:\n        return state;\n    }\n  }","import { GET_ERRORS, CLEAR_DATA } from \"../actions/types\";\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    case CLEAR_DATA:\n      return initialState;\n    default:\n      return state;\n  }\n}","import {\n    CALCUL,\n    CALULC_EN_COURS\n  } from \"../actions/types\";\n  \n  const initialState = {\n    resultat: {},\n    loading: false,\n    fait: false\n    };\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n      case CALULC_EN_COURS:\n        return {\n          ...state,\n          loading: true,\n          fait : false\n        };\n      case CALCUL:\n        return {\n          ...state,\n          resultat: action.payload,\n          loading: false,\n          fait : true\n        };\n      default:\n        return state;\n    }\n}","import {\n    VERIFICATION,\n    VERIF_EN_COURS,\n    RENVOI,\n    CLEAR_DATA\n  } from \"../actions/types\";\n  \n  const initialState = {\n    loading: false,\n    isVerified: false,\n    message:\"\"\n  };\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n      case VERIF_EN_COURS:\n        return {\n          ...state,\n          loading: true\n        };\n      case VERIFICATION:\n        return{\n          ...state,\n          loading: false,\n          isVerified: true\n        }\n      case RENVOI:\n        return{\n          ...state,\n          message: action.payload\n        }\n      case CLEAR_DATA:\n        return initialState;\n      default:\n        return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducers\";\nimport calculReducers from \"./calculReducers\";\nimport confirmReducers from \"./confirmReducers\";\n\nexport default combineReducers({\n  auth: authReducer,\n  calc: calculReducers,\n  conf: confirmReducers,\n  errors: errorReducer\n});","import { createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst composeSetup = process.env.NODE_ENV !== 'Production' && typeof window === 'object' &&\n   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose\n\n// store\nconst initialState = {};\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeSetup(applyMiddleware(thunk))\n);\n\n//const store = createStore(\n  //compose(\n   // applyMiddleware(...middleware),\n    //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  //)\n//);\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nclass Navbar extends Component {\n  render() {\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper white\">\n            <Link\n              to=\"/\"\n              style={{\n                fontFamily: \"monospace\"\n              }}\n              className=\"col s5 brand-logo center black-text\"\n            >\n              <i className=\"material-icons\">code</i>\n              Projet 31 \n            </Link>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\nexport default Navbar;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n\nclass Landing extends Component {\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n}\n  render() {\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Bienvenu</b> à l'application de calcul v2{\" \"}\n            </h4>\n            <p className=\"flow-text grey-text text-darken-1\">\n              Connectez vous ou créer un compte si vous n'en avez pas un!\n            </p>\n            <br />\n            <Link\n            to=\"/register\"\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\"\n              }}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            >\n              Inscription\n            </Link>\n            <Link\n            to=\"/login\"\n              style={{\n                marginLeft: \"2rem\",\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\"\n              }}\n              className=\"btn btn-large waves-effect white hoverable black-text\"\n            >\n              Connexion\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps)(Landing);","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      message:\"\",\n      errors: {}\n    };\n  }\ncomponentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n}\ncomponentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n    if(nextProps.auth.message){\n      this.setState({\n          name: \"\",\n          email: \"\",\n          password: \"\",\n          password2: \"\",\n          errors: {},\n          message: nextProps.auth.message\n      })\n    }\n  }\n\nonChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\nonSubmit = e => {\n    e.preventDefault();\nconst newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\nthis.props.registerUser(newUser);\n  };\nrender() {\n    const { errors } = this.state;\n    const { message } = this.state;\nreturn (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Revenir\n              l'acceuil\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Inscription</b>\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Déja inscrit? <Link to=\"/login\">Connectez vous!</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Nom</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Mot de passe</label>\n                <span className=\"red-text\">{errors.password}</span>\n\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirmer mot de passe</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Inscription\n                </button>\n                <h5>\n                <div>\n                  <h5>\n                    <span className=\"green-text\">\n                    {message}\n                    </span>\n                </h5>\n                </div>\n                </h5>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));","import React, { Component } from \"react\";\nimport { Link , withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\ncomponentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n}\n\ncomponentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\nonChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\nonSubmit = e => {\n    e.preventDefault();\n    const userData = {\n          email: this.state.email,\n          password: this.state.password\n    };      \nthis.props.loginUser(userData, this.props.history);\n  };\nrender() {\n    const { errors } = this.state;\nreturn (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Revenir à\n              l'accueil\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Connexion</b>\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Pas encore inscrit? <Link to=\"/register\">Inscription</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Mot de passe</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Connexion\n                </button><br /><br />\n                <div>\n                  <h5>\n                    <span className=\"red-text\">\n                    {errors.notVerified}\n                    </span>\n                </h5>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  conf: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  conf: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(withRouter(Login));","import axios from \"axios\";\nimport {\n    GET_ERRORS,\n    VERIFICATION,\n    VERIF_EN_COURS,\n    CLEAR_DATA,\n    RENVOI\n  } from \"./types\"\nexport const confirmUser = (userData, history) => dispatch => {\n    dispatch(ClearData());\n    dispatch(verificationEnCours());\n    axios\n      .post(\"/api/users/confirmation\", userData)\n      .then(() => {\n          dispatch(verification())\n          history.push(\"/login\");\n      }) // re-direct to login on successful verification\n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\nexport const resendUser = (userData) => dispatch => {\n    dispatch(ClearData());\n    axios\n      .post(\"/api/users/resend\", userData)\n      .then(res => {\n        dispatch({\n          type: RENVOI,\n          payload: res.data\n        })\n      }) \n      .catch(err =>\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      );\n  };\nexport const verification = () => {\n    return{\n      type: VERIFICATION\n    }\n}\nexport const verificationEnCours = () => {\n    return {\n      type: VERIF_EN_COURS\n    };\n};\nexport const ClearData = () => {\n    return {\n      type : CLEAR_DATA\n  }\n}","import React, { Component } from \"react\";\nimport { Link , withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { confirmUser } from \"../../actions/confirmActions\";\nimport classnames from \"classnames\";\nclass Confirmation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      token:\"\",\n      errors: {}\n    };\n  }\ncomponentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n        this.props.history.push(\"/dashboard\");\n      }\n    const { token } = this.props.match.params;\n    this.setState({token : token});\n}\n\ncomponentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n    if(nextProps.errors.nonValide){\n      this.props.history.push(\"/resend\");\n    }\n\n  }\nonChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\nonSubmit = e => {\n    e.preventDefault();\n    const userData = {\n          email: this.state.email,\n          token: this.state.token\n    };      \nthis.props.confirmUser(userData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\nrender() {\n    const { errors } = this.state;\n    const { token } = this.state;\nreturn (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Revenir à\n              l'accueil\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Confirmation</b>\n              </h4>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={token}\n                  error={errors.token}\n                  id=\"token\"\n                  type=\"hidden\"\n                  className={classnames(\"\", {\n                    invalid: errors.nonValide || errors.nonTrouve || errors.alreadyVerified\n                  })}\n                />\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Confirmer\n                </button>\n                <h5>\n                <span className=\"red-text\">\n                  {errors.nonValide}\n                  {errors.nonTrouve}\n                  {errors.alreadyVerified}\n                </span>\n                </h5>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nConfirmation.propTypes = {\n  confirmUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  conf: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  conf: state.conf,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { confirmUser }\n)(withRouter(Confirmation));","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/\" />\n      )\n    }\n  />\n);\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n  onCalculClick = e => {\n    e.preventDefault();\n    this.props.history.push('/calculatrice');\n  };\nrender() {\n    const { user } = this.props.auth;\nreturn (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4>\n              <b>Salut!</b> {user.name.split(\" \")[0]}\n              <p className=\"flow-text grey-text text-darken-1\">\n                {\" \"}\n                <span>Vous êtes connecté!</span> 👏\n              </p>\n            </h4>\n            <button\n              style={{\n                width: \"200px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={this.onCalculClick}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            > Calculatrice\n            </button>\n            <br />\n            <button\n              style={{\n                width: \"200px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginTop: \"1rem\"\n              }}\n              onClick={this.onLogoutClick}\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n            > Se déconnecter\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  conf: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  conf: state.conf\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Dashboard);","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  CALCUL,\n  CALULC_EN_COURS,\n  CLEAR_DATA\n} from \"./types\";\n// Login - get user token\nexport const Calcul = (userData) => dispatch => {\n    dispatch(CalculEnCours());\n    dispatch(ClearData());\n    axios\n    .post(\"/api/logiciels/calculatrice\", userData)\n    .then(res => \n      dispatch({\n        type: CALCUL,\n        payload: res.data\n      }))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n// User loading\nexport const CalculEnCours = () => {\n  return {\n    type: CALULC_EN_COURS\n  };\n};\nexport const ClearData = () => {\n  return {\n    type : CLEAR_DATA\n  }\n}\n\n","import React, { Component } from \"react\";\nimport { Link , withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { PushSpinner } from \"react-spinners-kit\";\nimport { Calcul } from \"../../actions/calculActions\";\nimport classnames from \"classnames\";\nclass Calculatrice extends Component {\n  constructor() {\n    super();\n    this.state = {\n      pchiffre: \"\",\n      dchiffre: \"\",\n      opr:\"\",\n      resultat:\"\",\n      loading:false,\n      errors: {}\n    };\n  }\n\ncomponentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n    if (this.props.errors!==nextProps.errors){\n      this.setState({loading:false});\n    }\n    if (nextProps.calc.fait) {\n      this.props.history.push(\"/resultat\");\n    }\n  }\nonChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\nonSubmit = e => {\n    e.preventDefault();\n    const userData = {\n          pchiffre: this.state.pchiffre,\n          dchiffre: this.state.dchiffre,\n          opr: this.state.opr\n    };\nthis.setState({loading:true});\nthis.props.Calcul(userData);\n};\nrender() {\n    const { errors } = this.state;\nreturn (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Revenir à\n              l'accueil\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Simple calcul</b>\n              </h4>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.pchiffre}\n                  error={errors.pchiffre}\n                  id=\"pchiffre\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.pchiffre\n                  })}\n                />\n                <label htmlFor=\"email\">Premier chiffre</label>\n                <span className=\"red-text\">\n                  {errors.pchiffre}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.opr}\n                  error={errors.opr}\n                  id=\"opr\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.opr\n                  })}\n                />\n                <label htmlFor=\"password\">Opérateur</label>\n                <span className=\"red-text\">\n                  {errors.opr}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.dchiffre}\n                  error={errors.dchiffre}\n                  id=\"dchiffre\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.dchiffre\n                  })}\n                />\n                <label htmlFor=\"password\">Deuxieme Chiffre</label>\n                <span className=\"red-text\">\n                  {errors.dchiffre}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  onClick={this.onClick}\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Calculer\n                </button> <br /> <br />\n                <PushSpinner\n                size={30}\n                color=\"#686769\"\n                loading={this.state.loading}\n            />\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nCalculatrice.propTypes = {\n  Calcul: PropTypes.func.isRequired,\n  calc: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  calc: state.calc,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { Calcul }\n)(withRouter(Calculatrice));","import React, { Component } from \"react\";\nimport { Link , withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nclass Resultat extends Component {\n\nrender() {\n\nreturn (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Revenir à\n              l'accueil\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Resultat</b> <br /> <br />\n                <span>{this.props.calc.resultat.stdout}</span><br /><br />\n                <Link\n            to=\"/calculatrice\"\n              style={{\n                width: \"280px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\"\n              }}\n              className=\"btn btn-large waves-effect white hoverable black-text\"\n            >\n              Faire un autre calcul\n            </Link>\n              </h4>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nResultat.propTypes = {\n  calc: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  calc: state.calc,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps\n)(withRouter(Resultat));","import React, { Component } from \"react\";\nimport { Link , withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { resendUser } from \"../../actions/confirmActions\";\nimport classnames from \"classnames\";\nclass Resend extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      message: \"\",\n      token: \"\",\n      errors: {}\n    };\n  }\ncomponentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n        this.props.history.push(\"/dashboard\");\n      }\n      if(this.props.errors.nonValide){\n        this.setState({\n            token: this.props.errors.nonValide + \"Entrez votre mail pour en recevoir un autre\"\n        })\n      }  \n}\n\ncomponentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n    if(nextProps.conf.message){\n        this.setState({\n            email: \"\",\n            message: nextProps.conf.message,\n        })\n      }\n\n  }\nonChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\nonSubmit = e => {\n    e.preventDefault();\n    const userData = {\n          email: this.state.email\n    };      \nthis.props.resendUser(userData);\n  };\nrender() {\n    const { errors } = this.state;\n    const  message  = this.state.message;\n    const  token  = this.state.token;\n\nreturn (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Revenir à\n              l'accueil\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4>\n                <b>Renvoi</b>\n              </h4>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Renvoyer\n                </button>\n                <h5>\n                <span className=\"red-text\">\n                  {errors.nonTrouve}\n                  {errors.alreadyVerified}\n                  {token}\n                </span>\n                <span className=\"green-text\">\n                  {message}\n                </span>\n                </h5>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nResend.propTypes = {\n  resendUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  conf: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  conf: state.conf,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { resendUser }\n)(withRouter(Resend));","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Confirmation from \"./components/auth/Confirmation\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Calculatrice from \"./components/logiciel/Calculatrice\";\nimport Resultat from \"./components/logiciel/Resultat\";\nimport Resend from \"./components/auth/Resend\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path='/resend' component={Resend} />\n            <Route exact path='/confirmation/:token' component={Confirmation} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/calculatrice\" component={Calculatrice} />\n              <PrivateRoute exact path=\"/resultat\" component={Resultat} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}