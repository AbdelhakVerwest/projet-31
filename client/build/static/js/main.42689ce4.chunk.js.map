{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducers.js","reducers/calculReducers.js","reducers/confirmReducers.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","actions/confirmActions.js","components/auth/Confirmation.js","components/private-route/PrivateRoute.js","components/dashboard/Dashboard.js","actions/calculActions.js","components/logiciel/Calculatrice.js","components/logiciel/Resultat.js","components/auth/Resend.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","verification","ClearData","logoutUser","history","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","message","user","loading","resultat","fait","isVerified","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","profile","calc","conf","errors","composeSetup","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","Navbar","react_default","a","createElement","className","Link","to","style","fontFamily","Component","Landing","this","props","push","height","width","borderRadius","letterSpacing","marginLeft","connect","Register","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","id","value","onSubmit","preventDefault","newUser","name","email","password","password2","registerUser","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","userData","post","then","res","data","catch","err","response","withRouter","Login","loginUser","emailnotfound","passwordincorrect","notVerified","setItem","jwt_decode","verificationEnCours","Confirmation","confirmUser","match","params","nonValide","nonTrouve","alreadyVerified","_ref","component","rest","objectWithoutProperties","Route","assign","render","Redirect","Dashboard","onLogoutClick","onCalculClick","split","onClick","CalculEnCours","Calculatrice","pchiffre","dchiffre","opr","Calcul","react_spinners_kit_lib","size","color","Resultat","stdout","Resend","resendUser","jwtToken","currentTime","Date","now","exp","location","href","App","es","BrowserRouter","layout_Navbar","exact","path","Switch","private_route_PrivateRoute","Boolean","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42689ce4.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setAuthToken;","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  GET_ERRORS,\r\n  ENREGISTREMENT,\r\n  GET_CURRENT_USER,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING,\r\n  VERIFICATION,\r\n  CLEAR_DATA\r\n} from \"./types\";\r\n// Register User\r\nexport const registerUser = (userData) => dispatch => {\r\n  dispatch(ClearData());\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then(res =>\r\n    dispatch({\r\n      type: ENREGISTREMENT,\r\n      payload: res.data\r\n    }))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Login - get user token\r\nexport const loginUser = (userData, history) => dispatch => {\r\n  dispatch(ClearData());\r\n  axios\r\n    .post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n      // Save to localStorage\r\n// Set token to localStorage\r\n      dispatch(verification());\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"jwtToken\", token);\r\n      // Set token to Auth header\r\n      setAuthToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .then(() => history.push(\"/dashboard\")) // re-direct to dashboard on successful login\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n// Get current user\r\nexport const getCurrentUser = () => dispatch => {\r\n  dispatch(setUserLoading());\r\n  axios\r\n    .get(\"/api/user/currentuser\")\r\n    .then(res =>\r\n      dispatch({\r\n        type: GET_CURRENT_USER,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\nexport const verification = () => {\r\n  return{\r\n    type: VERIFICATION\r\n  }\r\n}\r\nexport const ClearData = () => {\r\n  return {\r\n    type : CLEAR_DATA\r\n  }\r\n}\r\n// Log user out\r\nexport const logoutUser = (history) => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const ENREGISTREMENT =\"ENREGISTREMENT\";\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const GET_CURRENT_USER = \"GET_CURRENT_USER\";\r\nexport const CALCUL = \"CALCUL\";\r\nexport const CALULC_EN_COURS = \"CALULC_EN_COURS\";\r\nexport const CLEAR_DATA = \"CLEAR_DATA\";\r\nexport const VERIF_EN_COURS = \"VERIF_EN_COURS\";\r\nexport const VERIFICATION = \"VERIFICATION\";\r\nexport const RENVOI = \"RENVOI\";\r\n\r\n","import {\r\n    ENREGISTREMENT,\r\n    SET_CURRENT_USER,\r\n    USER_LOADING,\r\n    GET_CURRENT_USER\r\n  } from \"../actions/types\";\r\n  const isEmpty = require(\"is-empty\");\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    message:\"\",\r\n    user: {},\r\n    loading: false\r\n  };\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case ENREGISTREMENT:\r\n        return {\r\n          ...state,\r\n          message: action.payload,\r\n        };\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: !isEmpty(action.payload),\r\n          user: action.payload\r\n        };\r\n      case USER_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      case GET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          profile: action.payload,\r\n          loading: false\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { GET_ERRORS, CLEAR_DATA } from \"../actions/types\";\r\nconst initialState = {};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    case CLEAR_DATA:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n    CALCUL,\r\n    CALULC_EN_COURS,\r\n  } from \"../actions/types\";\r\n  \r\n  const initialState = {\r\n    resultat: {},\r\n    loading: false,\r\n    fait: false\r\n    };\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case CALULC_EN_COURS:\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n          fait : false\r\n        };\r\n      case CALCUL:\r\n        return {\r\n          ...state,\r\n          resultat: action.payload,\r\n          loading: false,\r\n          fait : true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n}","import {\r\n    VERIFICATION,\r\n    VERIF_EN_COURS,\r\n    RENVOI\r\n  } from \"../actions/types\";\r\n  \r\n  const initialState = {\r\n    loading: false,\r\n    isVerified: false,\r\n    message:\"\"\r\n  };\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case VERIF_EN_COURS:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      case VERIFICATION:\r\n        return{\r\n          ...state,\r\n          loading: false,\r\n          isVerified: true\r\n        }\r\n      case RENVOI:\r\n        return{\r\n          ...state,\r\n          message: action.payload\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducers\";\r\nimport errorReducer from \"./errorReducers\";\r\nimport calculReducers from \"./calculReducers\";\r\nimport confirmReducers from \"./confirmReducers\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  calc: calculReducers,\r\n  conf: confirmReducers,\r\n  errors: errorReducer\r\n});","import { createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nconst composeSetup = process.env.NODE_ENV !== 'Production' && typeof window === 'object' &&\r\n   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose\r\n\r\n// store\r\nconst initialState = {};\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeSetup(applyMiddleware(thunk))\r\n);\r\n\r\n//const store = createStore(\r\n  //compose(\r\n   // applyMiddleware(...middleware),\r\n    //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  //)\r\n//);\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nclass Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar-fixed\">\r\n        <nav className=\"z-depth-0\">\r\n          <div className=\"nav-wrapper white\">\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                fontFamily: \"monospace\"\r\n              }}\r\n              className=\"col s5 brand-logo center black-text\"\r\n            >\r\n              <i className=\"material-icons\">code</i>\r\n              Projet 31 \r\n            </Link>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n}\r\n  render() {\r\n    return (\r\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 center-align\">\r\n            <h4>\r\n              <b>Bienvenu</b> à l'application de calcul{\" \"}\r\n            </h4>\r\n            <p className=\"flow-text grey-text text-darken-1\">\r\n              Connectez vous ou créer un compte si vous n'en avez pas un!\r\n            </p>\r\n            <br />\r\n            <Link\r\n            to=\"/register\"\r\n              style={{\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\"\r\n              }}\r\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n            >\r\n              Inscription\r\n            </Link>\r\n            <Link\r\n            to=\"/login\"\r\n              style={{\r\n                marginLeft: \"2rem\",\r\n                width: \"150px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\"\r\n              }}\r\n              className=\"btn btn-large waves-effect white hoverable black-text\"\r\n            >\r\n              Connexion\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps)(Landing);","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      message:\"\",\r\n      errors: {}\r\n    };\r\n  }\r\ncomponentDidMount() {\r\n    // If logged in and user navigates to Register page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n}\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n    if(nextProps.auth.message){\r\n      this.setState({\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          password2: \"\",\r\n          errors: {},\r\n          message: nextProps.auth.message\r\n      })\r\n    }\r\n  }\r\n\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = e => {\r\n    e.preventDefault();\r\nconst newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\nthis.props.registerUser(newUser);\r\n  };\r\nrender() {\r\n    const { errors } = this.state;\r\n    const { message } = this.state;\r\nreturn (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Revenir\r\n              l'acceuil\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Inscription</b>\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Déja inscrit? <Link to=\"/login\">Connectez vous!</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.name}\r\n                  error={errors.name}\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.name\r\n                  })}\r\n                />\r\n                <label htmlFor=\"name\">Nom</label>\r\n                <span className=\"red-text\">{errors.name}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">{errors.email}</span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Mot de passe</label>\r\n                <span className=\"red-text\">{errors.password}</span>\r\n\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password2}\r\n                  error={errors.password2}\r\n                  id=\"password2\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password2\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password2\">Confirmer mot de passe</label>\r\n                <span className=\"red-text\">{errors.password2}</span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Inscription\r\n                </button>\r\n                <h5>\r\n                <div>\r\n                  <h5>\r\n                    <span className=\"green-text\">\r\n                    {message}\r\n                    </span>\r\n                </h5>\r\n                </div>\r\n                </h5>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { registerUser }\r\n)(withRouter(Register));","import React, { Component } from \"react\";\r\nimport { Link , withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\ncomponentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n}\r\n\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n          email: this.state.email,\r\n          password: this.state.password\r\n    };      \r\nthis.props.loginUser(userData, this.props.history);\r\n  };\r\nrender() {\r\n    const { errors } = this.state;\r\nreturn (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Revenir à\r\n              l'accueil\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Connexion</b>\r\n              </h4>\r\n              <p className=\"grey-text text-darken-1\">\r\n                Pas encore inscrit? <Link to=\"/register\">Inscription</Link>\r\n              </p>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email || errors.emailnotfound\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">\r\n                  {errors.email}\r\n                  {errors.emailnotfound}\r\n                </span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.password}\r\n                  error={errors.password}\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.password || errors.passwordincorrect\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Mot de passe</label>\r\n                <span className=\"red-text\">\r\n                  {errors.password}\r\n                  {errors.passwordincorrect}\r\n                </span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Connexion\r\n                </button><br /><br />\r\n                <div>\r\n                  <h5>\r\n                    <span className=\"red-text\">\r\n                    {errors.notVerified}\r\n                    </span>\r\n                </h5>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  conf: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  conf: state.auth,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { loginUser }\r\n)(withRouter(Login));","import axios from \"axios\";\r\nimport {\r\n    GET_ERRORS,\r\n    VERIFICATION,\r\n    VERIF_EN_COURS,\r\n    CLEAR_DATA,\r\n    RENVOI\r\n  } from \"./types\"\r\nexport const confirmUser = (userData, history) => dispatch => {\r\n    dispatch(ClearData());\r\n    dispatch(verificationEnCours());\r\n    axios\r\n      .post(\"/api/users/confirmation\", userData)\r\n      .then(() => {\r\n          dispatch(verification())\r\n          history.push(\"/login\");\r\n      }) // re-direct to login on successful verification\r\n      .catch(err =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        })\r\n      );\r\n  };\r\nexport const resendUser = (userData) => dispatch => {\r\n    dispatch(ClearData());\r\n    axios\r\n      .post(\"/api/users/resend\", userData)\r\n      .then(res => {\r\n        dispatch({\r\n          type: RENVOI,\r\n          payload: res.data\r\n        })\r\n      }) \r\n      .catch(err =>\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        })\r\n      );\r\n  };\r\nexport const verification = () => {\r\n    return{\r\n      type: VERIFICATION\r\n    }\r\n}\r\nexport const verificationEnCours = () => {\r\n    return {\r\n      type: VERIF_EN_COURS\r\n    };\r\n};\r\nexport const ClearData = () => {\r\n    return {\r\n      type : CLEAR_DATA\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport { Link , withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { confirmUser } from \"../../actions/confirmActions\";\r\nimport classnames from \"classnames\";\r\nclass Confirmation extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      token:\"\",\r\n      errors: {}\r\n    };\r\n  }\r\ncomponentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n        this.props.history.push(\"/dashboard\");\r\n      }\r\n    const { token } = this.props.match.params;\r\n    this.setState({token : token});\r\n}\r\n\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n    if(nextProps.errors.nonValide){\r\n      this.props.history.push(\"/resend\");\r\n    }\r\n\r\n  }\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n          email: this.state.email,\r\n          token: this.state.token\r\n    };      \r\nthis.props.confirmUser(userData, this.props.history); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\r\n  };\r\nrender() {\r\n    const { errors } = this.state;\r\n    const { token } = this.state;\r\nreturn (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Revenir à\r\n              l'accueil\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Confirmation</b>\r\n              </h4>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">\r\n                  {errors.email}\r\n                </span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={token}\r\n                  error={errors.token}\r\n                  id=\"token\"\r\n                  type=\"hidden\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.nonValide || errors.nonTrouve || errors.alreadyVerified\r\n                  })}\r\n                />\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Confirmer\r\n                </button>\r\n                <h5>\r\n                <span className=\"red-text\">\r\n                  {errors.nonValide}\r\n                  {errors.nonTrouve}\r\n                  {errors.alreadyVerified}\r\n                </span>\r\n                </h5>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nConfirmation.propTypes = {\r\n  confirmUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  conf: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  conf: state.conf,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { confirmUser }\r\n)(withRouter(Confirmation));","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nclass Dashboard extends Component {\r\n  onLogoutClick = e => {\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n  };\r\n  onCalculClick = e => {\r\n    e.preventDefault();\r\n    this.props.history.push('/calculatrice');\r\n  };\r\nrender() {\r\n    const { user } = this.props.auth;\r\nreturn (\r\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 center-align\">\r\n            <h4>\r\n              <b>Salut!</b> {user.name.split(\" \")[0]}\r\n              <p className=\"flow-text grey-text text-darken-1\">\r\n                {\" \"}\r\n                <span>Vous etes connecté!</span> 👏\r\n              </p>\r\n            </h4>\r\n            <button\r\n              style={{\r\n                width: \"200px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n              }}\r\n              onClick={this.onCalculClick}\r\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n            > Calculatrice\r\n            </button>\r\n            <br />\r\n            <button\r\n              style={{\r\n                width: \"200px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\",\r\n                marginTop: \"1rem\"\r\n              }}\r\n              onClick={this.onLogoutClick}\r\n              className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n            > Se déconncter\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nDashboard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  conf: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  conf: state.conf\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(Dashboard);","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  CALCUL,\r\n  CALULC_EN_COURS,\r\n  CLEAR_DATA\r\n} from \"./types\";\r\n// Login - get user token\r\nexport const Calcul = (userData) => dispatch => {\r\n    dispatch(CalculEnCours());\r\n    dispatch(ClearData());\r\n    axios\r\n    .post(\"/api/logiciels/calculatrice\", userData)\r\n    .then(res => \r\n      dispatch({\r\n        type: CALCUL,\r\n        payload: res.data\r\n      }))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n// User loading\r\nexport const CalculEnCours = () => {\r\n  return {\r\n    type: CALULC_EN_COURS\r\n  };\r\n};\r\nexport const ClearData = () => {\r\n  return {\r\n    type : CLEAR_DATA\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link , withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { PushSpinner } from \"react-spinners-kit\";\r\nimport { Calcul } from \"../../actions/calculActions\";\r\nimport classnames from \"classnames\";\r\nclass Calculatrice extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pchiffre: \"\",\r\n      dchiffre: \"\",\r\n      opr:\"\",\r\n      resultat:\"\",\r\n      loading:false,\r\n      errors: {}\r\n    };\r\n  }\r\n\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n    if (this.props.errors!==nextProps.errors){\r\n      this.setState({loading:false});\r\n    }\r\n    if (nextProps.calc.fait) {\r\n      this.props.history.push(\"/resultat\");\r\n    }\r\n  }\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n          pchiffre: this.state.pchiffre,\r\n          dchiffre: this.state.dchiffre,\r\n          opr: this.state.opr\r\n    };\r\nthis.setState({loading:true});\r\nthis.props.Calcul(userData);\r\n};\r\nrender() {\r\n    const { errors } = this.state;\r\nreturn (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Revenir à\r\n              l'accueil\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Simple calcul</b>\r\n              </h4>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.pchiffre}\r\n                  error={errors.pchiffre}\r\n                  id=\"pchiffre\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.pchiffre\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Premier chiffre</label>\r\n                <span className=\"red-text\">\r\n                  {errors.pchiffre}\r\n                </span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.opr}\r\n                  error={errors.opr}\r\n                  id=\"opr\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.opr\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Opérateur</label>\r\n                <span className=\"red-text\">\r\n                  {errors.opr}\r\n                </span>\r\n              </div>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.dchiffre}\r\n                  error={errors.dchiffre}\r\n                  id=\"dchiffre\"\r\n                  type=\"text\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.dchiffre\r\n                  })}\r\n                />\r\n                <label htmlFor=\"password\">Deuxieme Chiffre</label>\r\n                <span className=\"red-text\">\r\n                  {errors.dchiffre}\r\n                </span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  onClick={this.onClick}\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Calculer\r\n                </button> <br /> <br />\r\n                <PushSpinner\r\n                size={30}\r\n                color=\"#686769\"\r\n                loading={this.state.loading}\r\n            />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nCalculatrice.propTypes = {\r\n  Calcul: PropTypes.func.isRequired,\r\n  calc: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  calc: state.calc,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { Calcul }\r\n)(withRouter(Calculatrice));","import React, { Component } from \"react\";\r\nimport { Link , withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nclass Resultat extends Component {\r\n\r\nrender() {\r\n\r\nreturn (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Revenir à\r\n              l'accueil\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Resultat</b> <br /> <br />\r\n                <span>{this.props.calc.resultat.stdout}</span><br /><br />\r\n                <Link\r\n            to=\"/calculatrice\"\r\n              style={{\r\n                width: \"280px\",\r\n                borderRadius: \"3px\",\r\n                letterSpacing: \"1.5px\"\r\n              }}\r\n              className=\"btn btn-large waves-effect white hoverable black-text\"\r\n            >\r\n              Faire un autre calcul\r\n            </Link>\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nResultat.propTypes = {\r\n  calc: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  calc: state.calc,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps\r\n)(withRouter(Resultat));","import React, { Component } from \"react\";\r\nimport { Link , withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { resendUser } from \"../../actions/confirmActions\";\r\nimport classnames from \"classnames\";\r\nclass Resend extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n      token: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\ncomponentDidMount() {\r\n    // If logged in and user navigates to Login page, should redirect them to dashboard\r\n    if (this.props.auth.isAuthenticated) {\r\n        this.props.history.push(\"/dashboard\");\r\n      }\r\n      if(this.props.errors.nonValide){\r\n        this.setState({\r\n            token: this.props.errors.nonValide + \"Entrez votre mail pour en recevoir un autre\"\r\n        })\r\n      }  \r\n}\r\n\r\ncomponentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n    if(nextProps.conf.message){\r\n        this.setState({\r\n            email: \"\",\r\n            message: nextProps.conf.message,\r\n        })\r\n      }\r\n\r\n  }\r\nonChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\nonSubmit = e => {\r\n    e.preventDefault();\r\n    const userData = {\r\n          email: this.state.email\r\n    };      \r\nthis.props.resendUser(userData);\r\n  };\r\nrender() {\r\n    const { errors } = this.state;\r\n    const  message  = this.state.message;\r\n    const  token  = this.state.token;\r\n\r\nreturn (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Revenir à\r\n              l'accueil\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4>\r\n                <b>Renvoi</b>\r\n              </h4>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", {\r\n                    invalid: errors.email\r\n                  })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">\r\n                  {errors.email}\r\n                </span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                >\r\n                  Renvoyer\r\n                </button>\r\n                <h5>\r\n                <span className=\"red-text\">\r\n                  {errors.nonTrouve}\r\n                  {errors.alreadyVerified}\r\n                  {token}\r\n                </span>\r\n                <span className=\"green-text\">\r\n                  {message}\r\n                </span>\r\n                </h5>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nResend.propTypes = {\r\n  resendUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  conf: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  conf: state.conf,\r\n  errors: state.errors\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { resendUser }\r\n)(withRouter(Resend));","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nimport Navbar from \"./components/layout/Navbar\";\r\nimport Landing from \"./components/layout/Landing\";\r\nimport Register from \"./components/auth/Register\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Confirmation from \"./components/auth/Confirmation\";\r\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport Calculatrice from \"./components/logiciel/Calculatrice\";\r\nimport Resultat from \"./components/logiciel/Resultat\";\r\nimport Resend from \"./components/auth/Resend\";\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n// Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Navbar />\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path='/resend' component={Resend} />\r\n            <Route exact path='/confirmation/:token' component={Confirmation} />\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <PrivateRoute exact path=\"/calculatrice\" component={Calculatrice} />\r\n              <PrivateRoute exact path=\"/resultat\" component={Resultat} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}